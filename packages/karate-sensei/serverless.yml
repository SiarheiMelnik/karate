service:
  name: karate-sensei

plugins:
  - serverless-pseudo-parameters
  - serverless-step-functions
  - serverless-webpack

custom:
  webpackIncludeModules: true
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:service}-${self:custom.stage}
  isVersionFunctions-prod: true
  isVersionFunctions-default: false

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-1
  stage: test
  environment:
    SCRAPER_ENDPOINT: ${file(./config.yml):SCRAPER_ENDPOINT}
  versionFunctions: ${self:custom.isVersionFunctions-${self:custom.stage}, self:custom.isVersionFunctions-default}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "states:StartExecution"
      Resource:
        - "*"

functions:
  startCodewarsKatasStart:
    handler: handler.startCodewarsKatas
    events:
      - http:
          method: post
          path: codewars/katas
          cors: true
    environment:
      statemachine_arn: ${self:resources.Outputs.CodewarsKatas.Value}

  findKatasExpression:
    handler: handler.findKatasExpression

  addScrapeTask:
    handler: handler.addScrapeTask

  getResults:
    handler: handler.getResults

  sentResults:
    handler: handler.sentResults

stepFunctions:
  stateMachines:
    codewarsKatas:
      name: codewarsKatas
      definition:
        Comment: Scrape Katas Codewars
        StartAt: FindExpression
        States:
          FindExpression:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.prefix}-findKatasExpression
            Next: ScrapeKatas
          ScrapeKatas:
            Type: Task
            InputPath: $.data
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.prefix}-addScrapeTask
            Next: WaitScrapeResults
          GetResult:
            Type: Task
            InputPath: $.data
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.prefix}-getResults
            Next: CheckStatus
          WaitScrapeResults:
            Type: Wait
            Seconds: 10
            Next: GetResult
          CheckStatus:
            Type: Choice
            Choices:
              -
                Variable: $.statusCode
                NumericEquals: 202
                Next: WaitScrapeResults
              -
                Variable: $.statusCode
                NumericEquals: 200
                Next: SentResults
            Default: DefaultState
          SentResults:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.prefix}-sentResults
            End: true
          DefaultState:
            Type: Fail
            Cause: No Matches

resources:
  Outputs:
    CodewarsKatas:
      Description: The ARN of the state machine
      Value:
        Ref: CodewarsKatas
